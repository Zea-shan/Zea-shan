**Searching Algorithms in Python**

This repository contains a Python implementation of Linear Search and Binary Search algorithms. These are basic searching algorithms used to locate a target value within a list.

**Features**

Linear Search: Works on unsorted lists and iterates through each element.

Binary Search: Optimized search for sorted lists, utilizing the divide-and-conquer strategy.

How to Use

**Prerequisites**

Python 3.6 or higher installed on your system.

A text editor or IDE (e.g., VS Code, PyCharm) for running the script.


**How to Run the Code?**

1. Clone the repository or copy the script file Searching Algo.py to your local machine.


2. Open a terminal or command prompt and navigate to the directory containing the file.


3. Run the script using Python:

       python Searching\ Algo.py


4. The script will execute and display results for different cases of Linear Search and Binary Search in the console.



**Example Output**

The script demonstrates:

1. General case, best case, and worst case for both Linear Search and Binary Search.


2. Example output:

**Linear Search:**
General Case (target=7): Value 7
Best Case (target=15): Value 15
Worst Case (target=1): Value 1

**Binary Search:**
General Case (target=7): Value 7
Best Case (target=9): Value 9
Worst Case (target=15): Value 15



**Code Details**

The Search class has:

1. __init__: Initializes the list and target value.


2.**linear_search:** Loops through the list to find the target.


3. **binary_search:** Uses a sorted list and performs a binary search to locate the target.



**Notes**

The list for Linear Search (lst) can be unsorted.

The list for Binary Search (slst) must be sorted.


**Customizing the Code**

You can modify the lst and slst variables as well as the target values to test different scenarios.

Student:

Connect with me on LinkedIn for updates and more projects!
https://www.linkedin.com/in/zeeshan-ahmed-55a80923b


